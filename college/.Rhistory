data<- read.csv("college", header = TRUE)
data<- read.csv("college.csv", header = TRUE)
View(data)
dim(data)
names(data)
str(data)
setwd("D:\PhD\Data Science\dataScienceHWProject\college")
getwd()
data<- read.csv("college.csv", header = TRUE)
sum(is.na(data$Private))
name(data)
names(data)
sum(is.na(data$Apps))
sum(is.na(data$Enroll))
sum(data, na.rm = TRUE)
sum(data$Accept, na.rm = TRUE)
sum(is.na(data$Accept))
sum(is.na(data$Books))
indx <- apply(data, 2, function(x) any(is.na(x) | is.infinite(x)))
colnames[indx]
bind(
lapply(
lapply(data, is.na)
, sum)
)
f[rowSums(is.na(data))==0,]
data[rowSums(is.na(data))==0,]
summary(data)
class(data_1)
getwd()
data<- read.csv("college.csv", header = TRUE)
class(data)
head(data_1)
head(data)
View(head(data,20))
View(head(data,20))
str(data)
summary(data)
colnames(data)
##Univariate Profiling---------------------------
unique(data$College.Name)
length(unique(data$College.Name))
View(data)
colnames(data)
unique(data$Private)
length(unique(data$Private))
unique(data$Apps)
length(unique(data$Apps))
summary(data)
#customer_type------------
summary(data$Grad.Rate)
dim(data)
for (i in 1:19){
summary(data[, i])
}
for (i in 1:19){
print(summary(data[, i]))
}
unique(data$Private)
colnames(data[,1])
colnames(1)
unique(data$College.Name)
for (i in 1:19){
print(colnames(data[i, ]))
}
for (i in 1:19){
print(colnames(data[1,i ]))
}
for (i in 1:19){
print(colnames(data[0,i ]))
}
for (i in 1:19){
print(colnames(data[,i ]))
}
for (i in 1:19){
print(colnames(data[i]))
}
for (i in 1:19){
print(colnames(data[i]))
print(summary(data[, i]))
}
print("\n")
print("\\" )
print("\t")
for (i in 1:19){
print(colnames(data[i]))
print(summary(data[, i]))
print("\t")
}
for (i in 1:19){
print(colnames(data[i]))
print(summary(data[, i]))
print(" ")
}
for (i in 1:19){
print(colnames(data[i]))
print(summary(data[, i]))
print( )
}
for (i in 1:19){
print(colnames(data[i]))
print(summary(data[, i]))
}
for (i in 3:19){
print(colnames(data[i]))
print(summary(data[, i]))
}
summary(data)
data$Private <- factor(data$Private)
summary(data)
data$College.Name <- factor(data$College.Name)
summary(data)
hist(data$Private)
hist(data$Apps)
#distribution
hist(data$Accept)
data[1]
data[2]
for (i in 3:19){
hist(data[i])
}
for (i in 3:19){
hist(data[i])
}
data[i,]
data[,i]
for (i in 3:19){
hist(data[,i])
}
x_fit <- seq(5, 10, by = 0.1)
y_fit <- dnorm(x_fit,
mean = mean(data$Top10perc ),
sd = sd(data$Top10perc ))
hist(data_1$Top10perc , probability = T)
lines(x_fit, y_fit, col = "red")
boxplot(data_1$Top10perc )
x_fit <- seq(5, 10, by = 0.1)
y_fit <- dnorm(x_fit,
mean = mean(data$Top10perc ),
sd = sd(data$Top10perc ))
hist(data_1$Top10perc , probability = T)
lines(x_fit, y_fit, col = "red")
clear
cls
library(moments)
for (i in 3:19){
hist(data[,i], main= summary(data[, i]))
}
for (i in 3:19){
hist(data[,i], main=colnames(data[i]))
}
colnames(data)
hist(data$Terminal, probability = T, breaks = 15)
for (i in 3:19){
hist(data[,i], probability = T, breaks = 15,
main=colnames(data[i]))
}
for (i in 3:19){
hist(data[,i], probability = T, breaks = 15,
main=colnames(data[i]))
lines(density(data[,i]), col = "red")
}
for (i in 3:19){
qqnorm(data[,i], main = "QQ Plot of Product Quality", pch = 20)
lines(density(data[,i]), col = "red")
}
for (i in 3:19){
qqnorm(data[,i], main = "QQ Plot of Product Quality", pch = 20)
qqline(data[,i], col = "red")
}
for (i in 3:19){
qqnorm(data[,i], main = "QQ Plot of Product Quality"+colnames(data[i]) , pch = 20)
qqline(data[,i], col = "red")
}
for (i in 3:19){
qqnorm(data[,i], main = "QQ Plot of Product Quality", pch = 20)
qqline(data[,i], col = "red")
}
par(mfrow = c(4, 4))  # 2 rows and 3 columns
for (i in 3:19) {
hist(data[, i], xlab = "", main = paste("Histogram of", names(data)[i]))
}
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 3:19) {
hist(data[, i], xlab = "", main = paste("Histogram of", names(data)[i]))
}
par(mfrow = c(1, 1))
boxplot(data$Apps, main = "Price Distribution")
View(data)
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
hist(data[, i], xlab = "", main = paste("Histogram of", names(data)[i]))
}
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
hist(data[, i], xlab = "", main = paste("Histogram of", names(data)[i]))
}
par(mfrow = c(1, 1))
boxplot(data$Apps, main = "Number of applications received")
table(data$Private)
summary(data)
colnames(data)
View(head(data,20))
for (i in 4:19) {
qqnorm(data[,i], main = paste("QQ plot of", names(data)[i]), pch = 20)
qqline(data[,i], col = "red")
}
par(mfrow = c(2, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data1)[i]))
}
par(mfrow = c(1, 1))
par(mfrow = c(3, 3))
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data1)[i]))
}
par(mfrow = c(1,1))
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data1)[i]))
}
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data1)[i]))
}
for (i in 4:19) {
qqnorm(data[,i], main = paste("QQ plot of", names(data)[i]), pch = 20)
qqline(data[,i], col = "red")
}
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data1)[i]))
}
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data)[i]))
}
par(mfrow = c(1,1))
boxplot(data$Apps, main = "Number of applications received")
table(data$Private)
data
data <- data[,-1]
data
data<- read.csv("college.csv", header = TRUE)
dim(data)
data <- data[,-1]
dim(data)
View(head(data,20))
#customer_type------------
summary(data$Grad.Rate)
summary(data)
dim(data)
for (i in 2:18){
print(colnames(data[i]))
print(summary(data[, i]))
}
# Categorical data
data$Private <- factor(data$Private)
summary(data)
18-3
par(mfrow = c(4, 4))  # 4 rows and 4 columns
for (i in 3:18){
hist(data[,i], probability = T, breaks = 15,
main=colnames(data[i]))
lines(density(data[,i]), col = "red")
}
par(mfrow = c(3, 3))  # 4 rows and 4 columns
for (i in 3:18){
hist(data[,i], probability = T, breaks = 15,
main=colnames(data[i]))
lines(density(data[,i]), col = "red")
}
for (i in 3:18){
qqnorm(data[,i], main = "QQ Plot of", pch = 20)
qqline(data[,i], col = "red")
}
for (i in 3:18) {
hist(data[, i], xlab = "", main = paste("Histogram of", names(data)[i]))
}
for (i in 4:19) {
qqnorm(data[,i], main = paste("QQ plot of", names(data)[i]), pch = 20)
qqline(data[,i], col = "red")
}
#Scatter Plot
par(mfrow = c(3, 3))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data)[i]))
}
par(mfrow = c(2, 2))  # 2 rows and 3 columns
for (i in 4:19) {
plot(data[,i], data$Apps, xlab = "", main = paste("Apps vs.", names(data)[i]))
}
for (i in 4:19) {
qqnorm(data[,i], main = paste("QQ plot of", names(data)[i]), pch = 20)
qqline(data[,i], col = "red")
}
for (i in 3:18) {
hist(data[, i], xlab = "",  probability = T, breaks = 15,
main = paste("Histogram of", names(data)[i]))
lines(density(data[,i]), col = "red")
}
tukey_ul <- quantile(data$Apps, probs = 0.75) + 1.5 * IQR(data$Apps)
tukey_ul
sum(data$Apps > tukey_ul)
nrow(data)
sum(data$Apps > tukey_ul)/nrow(data) * 100
data[, c(4: 18)]
data[, c(3: 18)]
View(data)
cor_table <- round(cor(data[, c(3: 18)]), 2)
View(cor_table)
corrplot(cor_table)
corrplot(cor_table)
library("moments")  #Moments, skewness, kurtosis and related tests
library("MASS")     #Box-Cox Transformations for Linear Models
library("leaps")    #Regression Subset Selection
library("corrplot") #Visualization of Correlation Matrix
corrplot(cor_table)
r(mfrow = c(1,1))
corrplot(cor_table)
par(mfrow = c(1,1))
par(mfrow = c(1,1))
corrplot(cor_table)
cor_table <- round(cor(data[, c(2: 18)]), 2)
View(cor_table)
corrplot(cor_table)
#Scatter Plot
par(mar = c(2, 2, 2, 2))
par(mfrow = c(4, 4))  # 4 rows and 4 columns
for (i in c(3:18)) {
plot(data[, i], data$Apps, xlab = "", main = paste("Apps vs.", names(data)[i]))
}
par(mfrow = c(1, 1), mar = c(4.5, 4.5, 4.5, 4.5))
par(mar = c(2, 2, 2, 2))
par(mfrow = c(3, 3))  # 4 rows and 4 columns
for (i in c(3:18)) {
plot(data[, i], data$Apps, xlab = "", main = paste("Apps vs.", names(data)[i]))
}
par(mfrow = c(1, 1), mar = c(4.5, 4.5, 4.5, 4.5))
tapply(data$Apps, data$Private, mean)
table(data$Private)
